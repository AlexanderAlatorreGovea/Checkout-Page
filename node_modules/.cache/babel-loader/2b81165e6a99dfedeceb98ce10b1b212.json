{"ast":null,"code":"var _jsxFileName = \"/Users/alexandergovea/Downloads/react-complete-guide-code-17-practice-food-order-http-forms/code/01-starting-project/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  const convertJsonToArray = json => {\n    const jsonArray = [];\n\n    for (let key in json) {\n      jsonArray.push({\n        id: key,\n        name: json[key].name,\n        description: json[key].description,\n        price: json[key].price\n      });\n    }\n\n    return jsonArray;\n  };\n\n  const fetchMeals = useCallback(async () => {\n    try {\n      const response = await fetch(\"https://meals-e3d88-default-rtdb.firebaseio.com/meals.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const json = await response.json();\n      convertJsonToArray(json);\n      setMeals(json);\n    } catch (error) {\n      setError(error.message);\n    }\n  }, []);\n  useEffect(() => {\n    fetchMeals();\n  }, [fetchMeals]);\n\n  let mealsList = !meals && /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 29\n  }, this);\n\n  mealsList = meals && meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"xPcpMbs1icjUo3PjC5IZnSUhHTE=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/alexandergovea/Downloads/react-complete-guide-code-17-practice-food-order-http-forms/code/01-starting-project/src/components/Meals/AvailableMeals.js"],"names":["useState","useEffect","useCallback","Card","MealItem","classes","AvailableMeals","meals","setMeals","error","setError","convertJsonToArray","json","jsonArray","key","push","id","name","description","price","fetchMeals","response","fetch","ok","Error","message","mealsList","map","meal"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AAGA,QAAMW,kBAAkB,GAAIC,IAAD,IAAU;AACnC,UAAMC,SAAS,GAAG,EAAlB;;AAEA,SAAI,IAAIC,GAAR,IAAeF,IAAf,EAAsB;AACpBC,MAAAA,SAAS,CAACE,IAAV,CAAe;AACbC,QAAAA,EAAE,EAAEF,GADS;AAEbG,QAAAA,IAAI,EAAEL,IAAI,CAACE,GAAD,CAAJ,CAAUG,IAFH;AAGbC,QAAAA,WAAW,EAAEN,IAAI,CAACE,GAAD,CAAJ,CAAUI,WAHV;AAIbC,QAAAA,KAAK,EAAEP,IAAI,CAACE,GAAD,CAAJ,CAAUK;AAJJ,OAAf;AAMD;;AAED,WAAON,SAAP;AACD,GAbD;;AAeA,QAAMO,UAAU,GAAGlB,WAAW,CAAC,YAAY;AACzC,QAAI;AACF,YAAMmB,QAAQ,GAAG,MAAMC,KAAK,CAC1B,4DAD0B,CAA5B;;AAIA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,YAAMZ,IAAI,GAAG,MAAMS,QAAQ,CAACT,IAAT,EAAnB;AAEAD,MAAAA,kBAAkB,CAACC,IAAD,CAAlB;AAEAJ,MAAAA,QAAQ,CAACI,IAAD,CAAR;AACD,KAdD,CAcE,OAAOH,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACgB,OAAP,CAAR;AACD;AACF,GAlB6B,EAkB3B,EAlB2B,CAA9B;AAoBAxB,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAIA,MAAIM,SAAS,GAAG,CAACnB,KAAD,iBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA1B;;AAEAmB,EAAAA,SAAS,GAAGnB,KAAK,IAAIA,KAAK,CAACoB,GAAN,CAAWC,IAAD,iBAC7B,QAAC,QAAD;AAEE,IAAA,EAAE,EAAEA,IAAI,CAACZ,EAFX;AAGE,IAAA,IAAI,EAAEY,IAAI,CAACX,IAHb;AAIE,IAAA,WAAW,EAAEW,IAAI,CAACV,WAJpB;AAKE,IAAA,KAAK,EAAEU,IAAI,CAACT;AALd,KACOS,IAAI,CAACZ,EADZ;AAAA;AAAA;AAAA;AAAA,UADmB,CAArB;AAUA,sBACE;AAAS,IAAA,SAAS,EAAEX,OAAO,CAACE,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKmB;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA/DD;;GAAMpB,c;;KAAAA,c;AAiEN,eAAeA,cAAf","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [error, setError] = useState(\"\");\n\n\n  const convertJsonToArray = (json) => {\n    const jsonArray = [];\n\n    for(let key in json ) {\n      jsonArray.push({\n        id: key,\n        name: json[key].name,\n        description: json[key].description,\n        price: json[key].price\n      })\n    }\n\n    return jsonArray\n  }\n\n  const fetchMeals = useCallback(async () => {\n    try {\n      const response = await fetch(\n        \"https://meals-e3d88-default-rtdb.firebaseio.com/meals.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const json = await response.json();\n    \n      convertJsonToArray(json)\n\n      setMeals(json);\n    } catch (error) {\n      setError(error.message);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchMeals();\n  }, [fetchMeals]);\n\n  let mealsList = !meals && <p>Loading...</p>;\n\n  mealsList = meals && meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}