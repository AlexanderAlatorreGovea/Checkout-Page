{"ast":null,"code":"var _jsxFileName = \"/Users/alexandergovea/Downloads/react-complete-guide-code-17-practice-food-order-http-forms/code/01-starting-project/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const convertJsonToArray = json => {\n    const jsonArray = [];\n\n    for (let key in json) {\n      jsonArray.push({\n        id: key,\n        name: json[key].name,\n        description: json[key].description,\n        price: json[key].price\n      });\n    }\n\n    return jsonArray;\n  };\n\n  const fetchMeals = async () => {\n    try {\n      const response = await fetch(\"https://meals-e3d88-default-rtdb.firebaseio.com/meals.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      let json = await response.json();\n      json = await convertJsonToArray(json);\n      setMeals(json);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchMeals();\n  }, [fetchMeals]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"...loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n  const mealsList = meals && meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"frrsaj0QsVZRzsWdV1MAEqACYb0=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/alexandergovea/Downloads/react-complete-guide-code-17-practice-food-order-http-forms/code/01-starting-project/src/components/Meals/AvailableMeals.js"],"names":["useState","useEffect","useCallback","Card","MealItem","classes","AvailableMeals","meals","setMeals","isLoading","setIsLoading","error","setError","convertJsonToArray","json","jsonArray","key","push","id","name","description","price","fetchMeals","response","fetch","ok","Error","message","MealsLoading","mealsList","map","meal"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMa,kBAAkB,GAAIC,IAAD,IAAU;AACnC,UAAMC,SAAS,GAAG,EAAlB;;AAEA,SAAK,IAAIC,GAAT,IAAgBF,IAAhB,EAAsB;AACpBC,MAAAA,SAAS,CAACE,IAAV,CAAe;AACbC,QAAAA,EAAE,EAAEF,GADS;AAEbG,QAAAA,IAAI,EAAEL,IAAI,CAACE,GAAD,CAAJ,CAAUG,IAFH;AAGbC,QAAAA,WAAW,EAAEN,IAAI,CAACE,GAAD,CAAJ,CAAUI,WAHV;AAIbC,QAAAA,KAAK,EAAEP,IAAI,CAACE,GAAD,CAAJ,CAAUK;AAJJ,OAAf;AAMD;;AAED,WAAON,SAAP;AACD,GAbD;;AAeA,QAAMO,UAAU,GAAG,YAAY;AAC7B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,4DAD0B,CAA5B;;AAIA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,UAAIZ,IAAI,GAAG,MAAMS,QAAQ,CAACT,IAAT,EAAjB;AAEAA,MAAAA,IAAI,GAAG,MAAMD,kBAAkB,CAACC,IAAD,CAA/B;AAEAN,MAAAA,QAAQ,CAACM,IAAD,CAAR;AACD,KAdD,CAcE,OAAOH,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACgB,OAAP,CAAR;AACD;;AACDjB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAnBD;;AAqBAT,EAAAA,SAAS,CAAC,MAAM;AAEdqB,IAAAA,UAAU;AACX,GAHQ,EAGN,CAACA,UAAD,CAHM,CAAT;;AAKA,MAAIb,SAAJ,EAAe;AACb,wBACE;AAAS,MAAA,SAAS,EAAEJ,OAAO,CAACuB,YAA5B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,QAAMC,SAAS,GACbtB,KAAK,IACLA,KAAK,CAACuB,GAAN,CAAWC,IAAD,iBACR,QAAC,QAAD;AAEE,IAAA,EAAE,EAAEA,IAAI,CAACb,EAFX;AAGE,IAAA,IAAI,EAAEa,IAAI,CAACZ,IAHb;AAIE,IAAA,WAAW,EAAEY,IAAI,CAACX,WAJpB;AAKE,IAAA,KAAK,EAAEW,IAAI,CAACV;AALd,KACOU,IAAI,CAACb,EADZ;AAAA;AAAA;AAAA;AAAA,UADF,CAFF;AAYA,sBACE;AAAS,IAAA,SAAS,EAAEb,OAAO,CAACE,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKsB;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAzED;;GAAMvB,c;;KAAAA,c;AA2EN,eAAeA,cAAf","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const convertJsonToArray = (json) => {\n    const jsonArray = [];\n\n    for (let key in json) {\n      jsonArray.push({\n        id: key,\n        name: json[key].name,\n        description: json[key].description,\n        price: json[key].price,\n      });\n    }\n\n    return jsonArray;\n  };\n\n  const fetchMeals = async () => {\n    try {\n      const response = await fetch(\n        \"https://meals-e3d88-default-rtdb.firebaseio.com/meals.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      let json = await response.json();\n\n      json = await convertJsonToArray(json);\n\n      setMeals(json);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n\n    fetchMeals();\n  }, [fetchMeals]);\n\n  if (isLoading) {\n    return (\n      <section className={classes.MealsLoading}>\n        <p>...loading</p>\n      </section>\n    );\n  }\n\n  const mealsList =\n    meals &&\n    meals.map((meal) => (\n      <MealItem\n        key={meal.id}\n        id={meal.id}\n        name={meal.name}\n        description={meal.description}\n        price={meal.price}\n      />\n    ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}